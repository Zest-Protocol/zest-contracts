import { Tx, types } from 'https://deno.land/x/clarinet@v1.0.2/index.ts';
class Payment {
    static getLateFee(chain, amount, paymentPeriod, apr, height, nextPayment, caller) {
        return chain.callReadOnlyFn(`payment-fixed`, "get-payment", [
            types.uint(amount),
            types.uint(paymentPeriod),
            types.uint(apr),
            types.uint(height),
            types.uint(nextPayment),
            types.principal(caller), 
        ], caller).result;
    }
    static getPayment(chain, amount, paymentPeriod, apr, height, nextPayment, caller) {
        return chain.callReadOnlyFn(`payment-fixed`, "get-payment", [
            types.uint(amount),
            types.uint(paymentPeriod),
            types.uint(apr),
            types.uint(height),
            types.uint(nextPayment),
            types.principal(caller), 
        ], caller).result;
    }
    static triggerLatePayment(loanId, tokenId, caller) {
        return Tx.contractCall(`payment-fixed`, "trigger-late-payment", [
            types.uint(loanId),
            types.uint(tokenId), 
        ], caller);
    }
    static setContractOwner(newOwner, owner) {
        return Tx.contractCall("payment-fixed", "set-contract-owner", [
            types.principal(newOwner), 
        ], owner);
    }
    static setLateFee(lateFee, caller) {
        return Tx.contractCall(`payment-fixed`, "set-late-fee", [
            types.uint(lateFee), 
        ], caller);
    }
    static getCurrentLoanPaymentAt(chain, loanId, height, caller) {
        return chain.callReadOnlyFn(`payment-fixed`, "get-loan-payment-at-height", [
            types.uint(loanId),
            types.uint(height),
            types.principal(caller), 
        ], caller);
    }
    static isPayingLateFees(chain, caller) {
        return chain.callReadOnlyFn(`payment-fixed`, "is-paying-late-fees", [
            types.principal(caller)
        ], caller);
    }
    static getCurrentLoanPayment(chain, loanId, caller) {
        return chain.callReadOnlyFn(`payment-fixed`, "get-current-loan-payment", [
            types.uint(loanId),
            types.principal(caller), 
        ], caller).result;
    }
    static getEarlyRepaymentAmount(chain, loanId, caller) {
        return chain.callReadOnlyFn(`payment-fixed`, "get-early-repayment-amount", [
            types.uint(loanId),
            types.principal(caller), 
        ], caller).result;
    }
}
export { Payment };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvZmVybmFuZG9mb3kvRG9jdW1lbnRzL3plc3QtY29udHJhY3RzL29uY2hhaW4vdGVzdHMvaW50ZXJmYWNlcy9wYXltZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR4LCBDaGFpbiwgQWNjb3VudCwgdHlwZXMgfSBmcm9tICdodHRwczovL2Rlbm8ubGFuZC94L2NsYXJpbmV0QHYxLjAuMi9pbmRleC50cyc7XG5cbmNsYXNzIFBheW1lbnQge1xuXG4gIHN0YXRpYyBnZXRMYXRlRmVlKGNoYWluOiBDaGFpbiwgYW1vdW50OiBudW1iZXIsIHBheW1lbnRQZXJpb2Q6IG51bWJlciwgYXByOiBudW1iZXIsIGhlaWdodDogbnVtYmVyLCBuZXh0UGF5bWVudDogbnVtYmVyLCBjYWxsZXI6IHN0cmluZykge1xuICAgIHJldHVybiBjaGFpbi5jYWxsUmVhZE9ubHlGbihcbiAgICAgIGBwYXltZW50LWZpeGVkYCxcbiAgICAgIFwiZ2V0LXBheW1lbnRcIixcbiAgICAgIFtcbiAgICAgICAgdHlwZXMudWludChhbW91bnQpLFxuICAgICAgICB0eXBlcy51aW50KHBheW1lbnRQZXJpb2QpLFxuICAgICAgICB0eXBlcy51aW50KGFwciksXG4gICAgICAgIHR5cGVzLnVpbnQoaGVpZ2h0KSxcbiAgICAgICAgdHlwZXMudWludChuZXh0UGF5bWVudCksXG4gICAgICAgIHR5cGVzLnByaW5jaXBhbChjYWxsZXIpLFxuICAgICAgXSwgY2FsbGVyKS5yZXN1bHQ7XG4gIH1cblxuICBzdGF0aWMgZ2V0UGF5bWVudChjaGFpbjogQ2hhaW4sIGFtb3VudDogbnVtYmVyLCBwYXltZW50UGVyaW9kOiBudW1iZXIsIGFwcjogbnVtYmVyLCBoZWlnaHQ6IG51bWJlciwgbmV4dFBheW1lbnQ6IG51bWJlciwgY2FsbGVyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gY2hhaW4uY2FsbFJlYWRPbmx5Rm4oXG4gICAgICBgcGF5bWVudC1maXhlZGAsXG4gICAgICBcImdldC1wYXltZW50XCIsXG4gICAgICBbXG4gICAgICAgIHR5cGVzLnVpbnQoYW1vdW50KSxcbiAgICAgICAgdHlwZXMudWludChwYXltZW50UGVyaW9kKSxcbiAgICAgICAgdHlwZXMudWludChhcHIpLFxuICAgICAgICB0eXBlcy51aW50KGhlaWdodCksXG4gICAgICAgIHR5cGVzLnVpbnQobmV4dFBheW1lbnQpLFxuICAgICAgICB0eXBlcy5wcmluY2lwYWwoY2FsbGVyKSxcbiAgICAgIF0sIGNhbGxlcikucmVzdWx0O1xuICB9XG5cbiAgc3RhdGljIHRyaWdnZXJMYXRlUGF5bWVudChsb2FuSWQ6IG51bWJlciwgdG9rZW5JZDogbnVtYmVyLCBjYWxsZXI6IHN0cmluZykge1xuICAgIHJldHVybiBUeC5jb250cmFjdENhbGwoXG4gICAgICBgcGF5bWVudC1maXhlZGAsXG4gICAgICBcInRyaWdnZXItbGF0ZS1wYXltZW50XCIsXG4gICAgICBbXG4gICAgICAgIHR5cGVzLnVpbnQobG9hbklkKSxcbiAgICAgICAgdHlwZXMudWludCh0b2tlbklkKSxcbiAgICAgIF0sIGNhbGxlclxuICAgICk7XG4gIH1cblxuICBzdGF0aWMgc2V0Q29udHJhY3RPd25lcihcbiAgICBuZXdPd25lcjogc3RyaW5nLFxuICAgIG93bmVyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gVHguY29udHJhY3RDYWxsKFxuICAgICAgXCJwYXltZW50LWZpeGVkXCIsXG4gICAgICBcInNldC1jb250cmFjdC1vd25lclwiLFxuICAgICAgW1xuICAgICAgICB0eXBlcy5wcmluY2lwYWwobmV3T3duZXIpLFxuICAgICAgXSxcbiAgICAgIG93bmVyXG4gICAgKVxuICB9XG5cbiAgc3RhdGljIHNldExhdGVGZWUobGF0ZUZlZTogbnVtYmVyLCBjYWxsZXI6IHN0cmluZykge1xuICAgIHJldHVybiBUeC5jb250cmFjdENhbGwoXG4gICAgICBgcGF5bWVudC1maXhlZGAsXG4gICAgICBcInNldC1sYXRlLWZlZVwiLFxuICAgICAgW1xuICAgICAgICB0eXBlcy51aW50KGxhdGVGZWUpLFxuICAgICAgXSwgY2FsbGVyXG4gICAgKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRDdXJyZW50TG9hblBheW1lbnRBdChjaGFpbjogQ2hhaW4sIGxvYW5JZDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlciwgY2FsbGVyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gY2hhaW4uY2FsbFJlYWRPbmx5Rm4oXG4gICAgICBgcGF5bWVudC1maXhlZGAsXG4gICAgICBcImdldC1sb2FuLXBheW1lbnQtYXQtaGVpZ2h0XCIsXG4gICAgICBbXG4gICAgICAgIHR5cGVzLnVpbnQobG9hbklkKSxcbiAgICAgICAgdHlwZXMudWludChoZWlnaHQpLFxuICAgICAgICB0eXBlcy5wcmluY2lwYWwoY2FsbGVyKSxcbiAgICAgIF0sIGNhbGxlcik7XG4gIH1cblxuICBzdGF0aWMgaXNQYXlpbmdMYXRlRmVlcyhjaGFpbjogQ2hhaW4sIGNhbGxlcjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIGNoYWluLmNhbGxSZWFkT25seUZuKFxuICAgICAgYHBheW1lbnQtZml4ZWRgLFxuICAgICAgXCJpcy1wYXlpbmctbGF0ZS1mZWVzXCIsXG4gICAgICBbdHlwZXMucHJpbmNpcGFsKGNhbGxlcildLFxuICAgICAgY2FsbGVyKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRDdXJyZW50TG9hblBheW1lbnQoY2hhaW46IENoYWluLCBsb2FuSWQ6IG51bWJlciwgY2FsbGVyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gY2hhaW4uY2FsbFJlYWRPbmx5Rm4oXG4gICAgICBgcGF5bWVudC1maXhlZGAsXG4gICAgICBcImdldC1jdXJyZW50LWxvYW4tcGF5bWVudFwiLFxuICAgICAgW1xuICAgICAgICB0eXBlcy51aW50KGxvYW5JZCksXG4gICAgICAgIHR5cGVzLnByaW5jaXBhbChjYWxsZXIpLFxuICAgICAgXSwgY2FsbGVyKS5yZXN1bHQ7XG4gIH1cblxuICBzdGF0aWMgZ2V0RWFybHlSZXBheW1lbnRBbW91bnQoY2hhaW46IENoYWluLCBsb2FuSWQ6IG51bWJlciwgY2FsbGVyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gY2hhaW4uY2FsbFJlYWRPbmx5Rm4oXG4gICAgICBgcGF5bWVudC1maXhlZGAsXG4gICAgICBcImdldC1lYXJseS1yZXBheW1lbnQtYW1vdW50XCJcbiAgICAgICxbXG4gICAgICAgIHR5cGVzLnVpbnQobG9hbklkKSxcbiAgICAgICAgdHlwZXMucHJpbmNpcGFsKGNhbGxlciksXG4gICAgICBdLCBjYWxsZXIpLnJlc3VsdDtcbiAgfVxufVxuXG5leHBvcnQgeyBQYXltZW50IH07Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsRUFBRSxFQUFrQixLQUFLLFFBQVEsOENBQThDLENBQUM7QUFFekYsTUFBTSxPQUFPO0lBRVgsT0FBTyxVQUFVLENBQUMsS0FBWSxFQUFFLE1BQWMsRUFBRSxhQUFxQixFQUFFLEdBQVcsRUFBRSxNQUFjLEVBQUUsV0FBbUIsRUFBRSxNQUFjLEVBQUU7UUFDdkksT0FBTyxLQUFLLENBQUMsY0FBYyxDQUN6QixDQUFDLGFBQWEsQ0FBQyxFQUNmLGFBQWEsRUFDYjtZQUNFLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBQ2xCLEtBQUssQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDO1lBQ3pCLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1lBQ2YsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDbEIsS0FBSyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7WUFDdkIsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7U0FDeEIsRUFBRSxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUM7S0FDckI7SUFFRCxPQUFPLFVBQVUsQ0FBQyxLQUFZLEVBQUUsTUFBYyxFQUFFLGFBQXFCLEVBQUUsR0FBVyxFQUFFLE1BQWMsRUFBRSxXQUFtQixFQUFFLE1BQWMsRUFBRTtRQUN2SSxPQUFPLEtBQUssQ0FBQyxjQUFjLENBQ3pCLENB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