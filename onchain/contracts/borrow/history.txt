#V2
(/ (* u800000000 u100000000) (+ u800000000 200000000) )
(/ (* u800000000 u100000000) (+ u800000000 u200000000) )
(contract-call? .math div-precision-to-fixed u100000000 u100000000 u900000000 u6)
(contract-call? .math div-precision-to-fixed u100000000 (+ u100000000 u900000000) u6)
(- u80000000 10000000)
(- u80000000 u10000000)
(contract-call? .math mul-precision-with-factor u5500000 u6 u10000000)
(contract-call? .math mul-precision-with-factor u5512345 u6 u10000000)
(contract-call? .math mul-precision-with-factor u5512345 u6 u20000000)
u5512345
(contract-call? .math mul-precision-with-factor u51234500000 u10 u10000000)
u51234500000
(contract-call? .math mul-precision-with-factor u51234500000 u10 u20000000)
u51234500000
(contract-call? .math get-rt u5000000 u600)
(contract-call? .math get-rt-by-block u5000000 u1)
(contract-call? .pool-0-reserve calculate-compounded-interest u50000000 u1)
(contract-call? .pool-0-reserve calculate-compounded-interest u50000000 u2)
(contract-call? .pool-0-reserve calculate-compounded-interest u50000000 u3)
(contract-call? .pool-0-reserve calculate-compounded-interest u50000000 u4)
(contract-call? .pool-0-reserve calculate-compounded-interest u50000000 u5)
(contract-call? .pool-0-reserve calculate-compounded-interest u50000000 u10)
(contract-call? .pool-0-reserve calculate-compounded-interest u50000000 u1000)
(contract-call? .pool-0-reserve calculate-compounded-interest u50000000 u100000000)
(contract-call? .pool-0-reserve calculate-compounded-interest u50000000 u100000000000000)
(contract-call? .pool-0-reserve calculate-compounded-interest u50000000 u10)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u1)
(* u600 u31536000)
(/(* u600 u1) u31536000)
(/ (* u600 u1) u31536000)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u1)
::Help
::help
::get_block_height
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u4 u100000000)
(contract-call? .pool-0-reserve get-normlized-income u50000 u4 u100000000)
(contract-call? .pool-0-reserve get-normalized-income u50000 u4 u100000000)
(contract-call? .pool-0-reserve get-normalized-income u50000 u2 u100000000)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u1)
(contract-call? .math mul u100000001 100000000)
(contract-call? .math mul u100000001 u100000000)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u1)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u2)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u3)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u4)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u1)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u2)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u3)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u1)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u0)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u1)
(contract-call? .pool-0-reserve calculate-linear-interest u10000 u1)
(contract-call? .pool-0-reserve calculate-linear-interest u100000 u1)
(contract-call? .pool-0-reserve calculate-linear-interest u50000 u1)
(contract-call? .pool-0-reserve get-normalized-income u50000 u2 u100000000)
(contract-call? .pool-0-reserve get-normalized-income u50000 u1 u100000000)
(contract-call? .pool-0-reserve get-normalized-income u50000 u0 u100000000)
(contract-call? .pool-0-reserve get-normalized-income u50000 u1 u100000000)
(contract-call? .fees-calculator u40000000 u6 u50000000)
(contract-call? .fees-calculator calculate-origination-fee u40000000 u6 u50000000)
(contract-call? .fees-calculator calculate-origination-fee 'STC6G8DC2A0V58A6399M22C06BF4EK5JZSQW7BWP u40000000 u6)
u100000
(contract-call? .math u100000000 u100000)
(contract-call? .math mul u100000000 u100000)
(contract-call? .math mul u100000000 u1000000)
(contract-call? .math mul u100000000 u10000000)
u100000000
(contract-call? .fees-calculator calculate-origination-fee 'STC6G8DC2A0V58A6399M22C06BF4EK5JZSQW7BWP u40000000 u6)
(contract-call? .math mul-perc u20000000 u6 u50000000)
(contract-call? .math mul-perc u20000000 u6 (u100000000 u50000000))
(contract-call? .math mul-perc u20000000 u6 (- u100000000 u50000000))
(contract-call? .math mul u100000000 u50000000)
(contract-call? .math mul-perc u20000000 u6 (- u100000000 u5000000))
u19 000 000
u20 000 000
(contract-call? .math u100000000 u50000000)
(contract-call? .math mul u100000000 u50000000)
u100000000
(- u100000000 u5000000)
(contract-call? .math div-precision-to-fixed u100000 u10000000 u6)
(contract-call? .math div u100000 u10000000)
(contract-call? .math div-precision-to-fixed u100000 u10000000 u6)
(contract-call? .math mul u1000000 u100000000)
(contract-call? .math mul u10000000 u100000000)
(contract-call? .math mul u100000000 u100000000)
(contract-call? .math mul u100000000 u200000000)
(contract-call? .math mul u100000000 u100000000)
(contract-call? .math div u100000000 u100000000)
(contract-call? .math div u10000000 u100000000)
(contract-call? .math div u100000000 u100000000)
(contract-call? .math div u100000000 u1000000000)
(contract-call? .math div u100000000 u100000000)
(contract-call? .math div u100000000 u500000000)
(contract-call? .math div u100000000 u100000000)
(contract-call? .math div u100000000 u500000000)
(contract-call? .math div u100000000 u50000000)
(contract-call? .math div u100000000 u100000000)
(contract-call? .math div-precision-to-fixed u60000000 u600000000 u6)
(contract-call? .math div u60000000 u600000000)
(contract-call? .math div-precision-to-fixed u40000 u80000 u4)
