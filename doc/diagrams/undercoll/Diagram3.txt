# Diagram 3

actor Borrower
actor Lender 1
actor Lender 2
actor Pool Delegate
participant Vault Contract
participant Protocol Treasury
entity Public Service
database Bitcoin API


Borrower -> Vault Contract: is_btc_address_valid(pool_id, borrower_address)
Borrower <-- Vault Contract: OK

alt if collateral is required
Borrower -#blue>Vault Contract: deposit_collateral(pool_id, amount)
end

Borrower -#yellow> Protocol Treasury: send fees payment
Bitcoin API -> Public Service: transaction_data
Public Service -#blue> Vault Contract:verify_fees_payment(tx_data)
Vault Contract -#blue>Vault Contract: set_to_ready(pool_id)

Lender 1 -#yellow> Borrower: Reserve X lots with dust
Bitcoin API -> Public Service: transaction_data_1
Public Service -#blue> Vault Contract:verify_reservation(tx_data)
Lender 2 -#yellow> Borrower: Reserve Y lots with dust
Bitcoin API -> Public Service: transaction_data_2
Public Service -#blue> Vault Contract:verify_reservation(tx_data)
Vault Contract -#blue> Vault Contract: determine_lots(pool_id)


Lender 1 -#yellow> Borrower : Send (X * btc_lot_amount)
Bitcoin API -> Public Service: transaction_data_1
Public Service -#blue> Vault Contract:verify_payment(tx_data)

Lender 2 -#yellow> Borrower : Send (Y * btc_lot_amount)
Bitcoin API -> Public Service: transaction_data_2
Public Service -#blue> Vault Contract:verify_payment(tx_data)

